$animation-duration: 20s;
$transition-duration: 0.8s;

@mixin image-base {
  background-image: url('./background-img.jpg');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

@mixin layer-base {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  pointer-events: none;
  transition: all $transition-duration ease;
}

.app {
  min-height: 100vh;
  width: 100vw;
  overflow: hidden;
  position: relative;
  background: #000;
}

.content-wrapper {
  position: relative;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.preset-navigation {
  position: relative;
  z-index: 1000;
  width: 100%;
  padding: 20px;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
}

.button-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 10px;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
}

.preset-button {
  padding: 12px 20px;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 24px;
  background: rgba(255, 255, 255, 0.1);
  color: white;
  cursor: pointer;
  font-size: 14px;
  font-weight: 600;
  transition: all 0.3s ease;
  width: 100%;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  
  &:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }
  
  &.active {
    background: rgba(255, 255, 255, 0.3);
    border-color: rgba(255, 255, 255, 0.5);
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.2);
  }
}

.background-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  perspective: 1000px;
}

.base-image {
  @include layer-base;
  @include image-base;
  z-index: 1;
}

.effect-container {
  @include layer-base;
  z-index: 2;
}

.overlay-group {
  @include layer-base;
  overflow: hidden;
}

.fade-mask {
  @include layer-base;
}

.mirror-layer,
.echo-layer,
.color-split {
  @include layer-base;
  @include image-base;
  opacity: 0;
  mask-image: radial-gradient(
    circle at center,
    black 0%,
    black 70%,
    transparent 100%
  );
  -webkit-mask-image: radial-gradient(
    circle at center,
    black 0%,
    black 70%,
    transparent 100%
  );
}

// Complete Preset Styles
// Preset 1: Mirror World
.preset-1 {
  .mirror-left {
    opacity: 0.5;
    transform: scaleX(-1);
    animation: slideLeft 8s infinite alternate;
    filter: hue-rotate(90deg);
    mix-blend-mode: screen;
  }
  
  .mirror-right {
    opacity: 0.5;
    transform: scaleX(-1);
    animation: slideRight 8s infinite alternate;
    filter: hue-rotate(-90deg);
    mix-blend-mode: screen;
  }
}

// Preset 2: Fractal Echo
.preset-2 {
  .echo-1 {
    opacity: 0.6;
    transform: scale(1.1);
    animation: echoScale 6s infinite alternate;
    filter: hue-rotate(120deg);
    mix-blend-mode: difference;
  }
  
  .echo-2 {
    opacity: 0.4;
    transform: scale(1.2);
    animation: echoScaleRotate 6s infinite alternate-reverse;
    filter: hue-rotate(-120deg);
    mix-blend-mode: screen;
  }
}

// Preset 3: Time Slip
.preset-3 {
  .color-split.red-channel {
    opacity: 0.5;
    mix-blend-mode: screen;
    animation: timeSlip 6s infinite alternate;
    filter: hue-rotate(0deg) saturate(200%);
  }
  
  .color-split.blue-channel {
    opacity: 0.5;
    mix-blend-mode: screen;
    animation: timeSlip 6s infinite alternate-reverse;
    filter: hue-rotate(240deg) saturate(200%);
  }
}

// Preset 4: Reality Merge
.preset-4 {
  .echo-1 {
    opacity: 0.7;
    animation: realityMerge 8s infinite;
    filter: contrast(150%);
    mix-blend-mode: difference;
  }
  
  .mirror-right {
    opacity: 0.5;
    animation: realityMerge 8s infinite reverse;
    filter: hue-rotate(180deg);
    mix-blend-mode: screen;
  }
}

// Preset 5: Dimension Split
.preset-5 {
  .echo-1, .echo-2 {
    opacity: 0.6;
    animation: dimensionSplit 10s infinite;
    filter: url('#ripple');
    mix-blend-mode: exclusion;
  }
  
  .color-split.green-channel {
    opacity: 0.4;
    animation: dimensionPulse 5s infinite;
    mix-blend-mode: screen;
  }
}

// Preset 6: Neural Echo
.preset-6 {
  .mirror-left, .mirror-right {
    opacity: 0.5;
    animation: neuralPulse 4s infinite alternate;
    filter: url('#turbulence');
    mix-blend-mode: hard-light;
  }
}

// Preset 7: Quantum Mirror
.preset-7 {
  .echo-1 {
    opacity: 0.7;
    animation: quantumShift 6s infinite;
    mix-blend-mode: difference;
  }
  
  .color-split.blue-channel {
    opacity: 0.5;
    animation: quantumPhase 4s infinite;
    mix-blend-mode: screen;
  }
}

// Preset 8: Phase Shift
.preset-8 {
  .mirror-layer {
    opacity: 0.6;
    animation: phaseWarp 8s infinite;
    filter: saturate(200%);
    mix-blend-mode: color-dodge;
  }
}

// Preset 9: Dream Cascade
.preset-9 {
  .echo-layer {
    opacity: 0.5;
    animation: dreamFlow 10s infinite;
    filter: brightness(150%);
    mix-blend-mode: soft-light;
  }
}

// Preset 10: Mind Melt
.preset-10 {
  .color-split {
    opacity: 0.6;
    animation: mindMelt 8s infinite;
    filter: contrast(200%);
    mix-blend-mode: difference;
  }
}

// Animations
@keyframes slideLeft {
  0% { transform: translateX(0) scaleX(-1); }
  100% { transform: translateX(-20%) scaleX(-1); }
}

@keyframes slideRight {
  0% { transform: translateX(0) scaleX(-1); }
  100% { transform: translateX(20%) scaleX(-1); }
}

@keyframes echoScale {
  0% { transform: scale(1); }
  100% { transform: scale(1.5); }
}

@keyframes timeSlip {
  0% { transform: translateX(-10px) scale(1); }
  100% { transform: translateX(10px) scale(1.2); }
}

@keyframes realityMerge {
  0% { transform: scale(1) rotate(0deg); }
  100% { transform: scale(1.3) rotate(180deg); }
}

@keyframes dimensionSplit {
  0% { transform: scale(1) skew(0deg); }
  50% { transform: scale(1.2) skew(10deg); }
  100% { transform: scale(1) skew(0deg); }
}

@keyframes neuralPulse {
  0% { filter: url('#turbulence') brightness(100%); }
  100% { filter: url('#turbulence') brightness(150%); }
}

@keyframes quantumShift {
  0% { transform: translate(0, 0) scale(1); }
  50% { transform: translate(10px, 10px) scale(1.2); }
  100% { transform: translate(0, 0) scale(1); }
}

@keyframes phaseWarp {
  0% { filter: saturate(100%) hue-rotate(0deg); }
  100% { filter: saturate(200%) hue-rotate(360deg); }
}

@keyframes dreamFlow {
  0% { transform: scale(1) rotate(0deg); }
  50% { transform: scale(1.1) rotate(180deg); }
  100% { transform: scale(1) rotate(360deg); }
}

@keyframes mindMelt {
  0% { transform: scale(1) rotate(0deg); filter: contrast(100%); }
  50% { transform: scale(1.2) rotate(180deg); filter: contrast(200%); }
  100% { transform: scale(1) rotate(360deg); filter: contrast(100%); }
}

// Responsive Design
@media (prefers-reduced-motion: reduce) {
  .mirror-layer,
  .echo-layer,
  .color-split {
    animation: none !important;
    transition: none !important;
  }
  
  .preset-button {
    transition: none !important;
  }
}

@media (max-width: 1200px) {
  .button-grid {
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    padding: 0 10px;
  }

  .preset-button {
    padding: 10px 16px;
    font-size: 13px;
  }
}

@media (max-width: 768px) {
  .preset-navigation {
    padding: 15px 10px;
  }

  .button-grid {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    gap: 8px;
  }

  .preset-button {
    padding: 8px 12px;
    font-size: 12px;
    border-width: 1px;
  }
}

@media (max-width: 480px) {
  .preset-navigation {
    padding: 10px 5px;
  }

  .button-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 6px;
  }

  .preset-button {
    padding: 6px 10px;
    font-size: 11px;
    border-radius: 16px;
  }

  // Optimize animations for mobile
  .mirror-layer,
  .echo-layer,
  .color-split {
    animation-duration: 12s; // Slower animations for better performance
  }
}

// Height-based media queries for better vertical spacing
@media (max-height: 600px) {
  .preset-navigation {
    padding: 10px 5px;
  }

  .button-grid {
    gap: 6px;
  }

  .preset-button {
    padding: 6px 12px;
  }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .preset-button {
    background: rgba(255, 255, 255, 0.15);
    
    &:hover {
      background: rgba(255, 255, 255, 0.25);
    }
    
    &.active {
      background: rgba(255, 255, 255, 0.35);
    }
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .preset-button {
    border-color: white;
    background: black;
    color: white;
    
    &:hover,
    &.active {
      background: white;
      color: black;
    }
  }
}

// Device-specific optimizations
@media (max-width: 1200px) {
  .button-grid {
    grid-template-columns: repeat(5, 1fr);
    gap: 12px;
  }

  .preset-button {
    font-size: 14px;
    padding: 10px 15px;
  }
}

@media (max-width: 768px) {
  .preset-navigation {
    padding: 12px 8px;
  }

  .button-grid {
    grid-template-columns: repeat(3, 1fr);
    gap: 8px;
  }

  .preset-button {
    font-size: 12px;
    padding: 8px 12px;
  }

  // Optimize animations for mobile
  .mirror-layer,
  .echo-layer,
  .color-split {
    animation-duration: $animation-duration * 1.5;
  }
}

@media (max-width: 480px) {
  .preset-navigation {
    padding: 8px 5px;
  }

  .button-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 6px;
  }

  .preset-button {
    font-size: 11px;
    padding: 6px 10px;
    border-radius: 16px;
  }
}

// Handle different aspect ratios
@media (min-aspect-ratio: 2/1) {
  .background-container {
    .base-image {
      background-size: cover;
    }
  }
}

@media (max-aspect-ratio: 1/1) {
  .background-container {
    .base-image {
      background-size: contain;
    }
  }
}

// Touch device optimizations
@media (hover: none) and (pointer: coarse) {
  .preset-button {
    padding: 12px 16px; // Larger touch targets
    
    &:hover {
      transform: none;
    }
    
    &:active {
      transform: scale(0.95);
      transition: transform 0.1s ease;
    }
  }
}

// High DPI screen optimizations
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .base-image {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
  }
}

// Optimize for reduced data
@media (prefers-reduced-data: reduce) {
  .mirror-layer,
  .echo-layer,
  .color-split {
    animation-duration: $animation-duration * 2;
    transition-duration: $transition-duration * 2;
  }
}

// Fix iOS height issues
.background-container {
  height: 100vh;
  @supports (-webkit-touch-callout: none) {
    height: -webkit-fill-available;
  }
}

// Performance optimizations
.mirror-layer,
.echo-layer,
.color-split {
  will-change: transform, opacity;
  transform: translateZ(0);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Ensure smooth animations
* {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
}

// Prevent text selection on buttons
.preset-button {
  user-select: none;
  -webkit-user-select: none;
  -webkit-touch-callout: none;
}

// Focus styles for accessibility
.preset-button:focus-visible {
  outline: 2px solid white;
  outline-offset: 2px;
}

// Print styles
@media print {
  .effect-container {
    display: none;
  }
  
  .base-image {
    print-color-adjust: exact;
    -webkit-print-color-adjust: exact;
  }
}